extend type Query @guard {
    GetAdminDashboardMetrics(range: String): AdminDashboardMetrics
        @field(resolver: "UserQuery@getDashboardMetrics")

    GetProfiles(
        where: _ @whereConditions(columns: ["user_type", "created_at"])
        whereUser: _
            @whereHasConditions(
                relation: "user"
                columns: ["first_name", "last_name", "email"]
            )
        whereUserRole: _
            @whereHasConditions(relation: "user.role", columns: ["name"])
        orderBy: _ @orderBy(columns: ["created_at"])
    ): [Profile!]! @paginate(model: "Profile")

    GetVerificationRequests(
        where: _ @whereConditions(columns: ["status", "created_at"])
        whereUser: _
            @whereHasConditions(
                relation: "user"
                columns: ["first_name", "last_name", "email"]
            )
        orderBy: _ @orderBy(columns: ["created_at"])
    ): [Verification!]! @paginate(model: "Verification")
}

extend type Mutation @guard {
    FreezeAccount(user_uuid: String!): Boolean!
        @field(resolver: "UserMutator@freeze")

    UnfreezeAccount(user_uuid: String!): Boolean!
        @field(resolver: "UserMutator@unfreeze")

    ApproveRejectVerificationRequest(
        user_uuid: String!
        verificationId: String!
        status: String!
    ): Boolean! @field(resolver: "UserMutator@approveReject")
}
